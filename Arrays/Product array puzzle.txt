{ Driver Code Starts
Initial template for C++

#includebitsstdc++.h
using namespace std;



 } Driver Code Ends
User function template for C++

class Solution{
  public
     nums given vector
     return the Product vector P that hold product except self at each index
    vectorlong long int productExceptSelf(vectorlong long int& nums, int n) {
       
        code here     
        long long prod = 1;
        bool zero = false;
       for(int i=0; in; i++){
           if(nums[i] == 0){
               if(!zero){
                    zero = true;    
               } else {
                    vectorlong long int ans(n, 0);
                    return ans;
               }
           } else {
                prod = nums[i]; 
           }
       }
       vector long long int ans;
       for(int j=0; jn; j++){
           long long int temp;
           if(nums[j] == 0)
                temp = prod;
            else if(zero)
                temp = 0;
            else
                temp = prod  nums[j];
           ans.push_back(temp);
       }
       return ans;
    }
    
};


{ Driver Code Starts.
int main()
 {
    int t;   number of test cases
    cint;
    while(t--)
    {
        int n;   size of the array
        cinn;
        vectorlong long int arr(n),vec(n);
        
        for(int i=0;in;i++)     input the array
        {
            cinarr[i];
        }
        Solution obj;
        vec = obj.productExceptSelf(arr,n);    function call
        
        for(int i=0;in;i++)     print the output
        {
            cout  vec[i]   ;
        }
        coutendl;
    }
	return 0;
}
 } Driver Code Ends