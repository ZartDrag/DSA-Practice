
  Definition for a binary tree node.
  struct TreeNode {
      int val;
      TreeNode left;
      TreeNode right;
      TreeNode()  val(0), left(nullptr), right(nullptr) {}
      TreeNode(int x)  val(x), left(nullptr), right(nullptr) {}
      TreeNode(int x, TreeNode left, TreeNode right)  val(x), left(left), right(right) {}
  };
 
class Solution {
    bool validate(TreeNode root, int minVal, int maxVal, int prev){
    if(!root)
        return true;           
    
    if(root-val == prev)
        return false;

    if(root-val  maxVal  root-val  minVal)
        return false;
    
    if(!validate(root-left, minVal, root-val, root-val))
        return false;
    
    return validate(root-right, root-val, maxVal, root-val);
    }       

     bool isValidSTK(TreeNode root){
         stackTreeNode stk;
         vectorint inOrder;
         TreeNode curr = root;

         while(!stk.empty()  curr){   in order traversal through stack
             while(curr){
                 stk.push(curr);
                 curr = curr-left;
             }

             curr = stk.top();
             stk.pop();
             inOrder.push_back(curr-val);
             curr = curr-right;
         }
         int n = inOrder.size();
         for(int i = 1; in; i++){
             if(inOrder[i-1]=inOrder[i])
                 return false;
         }

         return true;
     }
public
    bool isValidBST(TreeNode root) {
        return validate(root, INT_MIN, root-val, root-val)  validate(root, INT_MIN, root-val, root-val);
    }
};