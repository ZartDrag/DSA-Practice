/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if(!root)
            return {};
        
        queue<TreeNode*> que;
        que.push(root);
        que.push(NULL);
        vector<vector<int>> ans;
        vector<int> row;
        while(!que.empty()){
            TreeNode* temp = que.front();
            que.pop();
            
            if(!temp){
                ans.push_back(row);
                row.clear();
                if(!que.empty()){
                    que.push(NULL);   
                }                    
                continue;
            }
            row.push_back(temp->val);
            
            if(temp->left)
                que.push(temp->left);
            
            if(temp->right)
                que.push(temp->right);
        }
        
        return ans;
    }
};