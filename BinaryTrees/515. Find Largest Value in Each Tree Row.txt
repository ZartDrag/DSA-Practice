/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    TreeNode *currMax;
public:
    void upMax(TreeNode *n){
        if(!currMax || n->val > currMax->val)
            currMax = n;
    }

    vector<int> largestValues(TreeNode* root) {
        if(!root)
            return {};
            
        vector<int> ans;
        currMax = NULL;
        queue<TreeNode*> que;

        que.push(root);
        que.push(NULL);

        while(que.size()){
            TreeNode *node = que.front();
            que.pop();

            if(!node){
                if(que.size())
                    que.push(NULL);

                if(currMax) 
                    ans.push_back(currMax->val);
                currMax = NULL;
            } else {
                upMax(node);
                if(node->left)
                    que.push(node->left);
                if(node->right) 
                    que.push(node->right);
            }
        }

        return ans;
    }
};