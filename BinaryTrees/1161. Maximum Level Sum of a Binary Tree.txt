/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxLevelSum(TreeNode* root) {
        queue<TreeNode*> levelOTrav;
        levelOTrav.push(root);
        levelOTrav.push(NULL);
        int currLvl = 1, maxLvl = -1, currSum=0, maxSum = INT_MIN;
        while(!levelOTrav.empty()){
            TreeNode *temp = levelOTrav.front();
            levelOTrav.pop();
            if(!temp){
                if(!levelOTrav.empty())
                    levelOTrav.push(NULL);
                if(currSum > maxSum){
                    maxSum = currSum;
                    maxLvl = currLvl;
                }
                currSum = 0;
                currLvl++;
                continue;
            }
            currSum += temp->val;
            if(temp->left)
                levelOTrav.push(temp->left);
            if(temp->right)
                levelOTrav.push(temp->right);
        }

        return maxLvl;
    }
};