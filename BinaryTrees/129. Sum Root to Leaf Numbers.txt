/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    void computeSum(TreeNode *root, int &ans, string sumTillNao){             
        sumTillNao += (root->val + '0');

        if(!root->left && !root->right) //if current node is leaf
            ans += stoi(sumTillNao);        

        if(root->left)
            computeSum(root->left, ans, sumTillNao);
        if(root->right)
            computeSum(root->right, ans, sumTillNao);
    }
public:
    int sumNumbers(TreeNode* root) {
        if(!root)
            return 0;
        int ans = 0;
        computeSum(root, ans, "");
        return ans;
    }
};