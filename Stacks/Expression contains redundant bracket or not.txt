//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int checkRedundancy(string s) {
        // code here
        stack<char> stk;
        
        for(char ch : s){
            if(isalpha(ch))
                continue;
            
            if(ch == ')'){
                bool isRedundant = true;
                char c;
                do{
                    c = stk.top();
                    stk.pop();
                    
                    if(c != '(')
                        isRedundant = false;
                        //the expression is not redundant if there is an operator inside the brackets
                } while(c != '(');
                
                if(isRedundant)
                    return 1;
            } else 
                stk.push(ch);
        }
        
        return 0;
    }
};


//{ Driver Code Starts.

int main(){
    int t;
    scanf("%d",&t);
    while(t--){
        
    
        string s; 
        cin>>s;
        
        Solution obj;
        int res = obj.checkRedundancy(s);
        
        cout<<res<<endl;
        
    }
}

// } Driver Code Ends