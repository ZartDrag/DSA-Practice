//{ Driver Code Starts
#include <bits/stdc++.h>

using namespace std;


// } Driver Code Ends
//User function template for C++
class Solution{
public:
	int search(string pat, string txt) {
	    // code here
	    int i, j;
	    int k = pat.size(), n = txt.size();
	    
	    unordered_map<char, int> letters;
	    
	    for(char ch : pat)
	        letters[ch]++;      //letters would contain the count of each letter
	       
	    int distinctChar = letters.size(); 
	                            //would hold the number of distinct letters
	    
	    for(j=0; j<k; j++){
	        if(letters.count(txt[j])){
	            letters[txt[j]]--;
	            if(letters[txt[j]] == 0)
	                distinctChar--;
	        }
	    }
	    
	    int ans = 0;
	    if(distinctChar == 0)
	        ans++;
	        
	    for(int i=0, j=k; j<n; i++, j++){
	        if(letters.count(txt[i])){
	            letters[txt[i]]++;
	            if(letters[txt[i]] == 1)
	                distinctChar++;
	        }
	        
	        if(letters.count(txt[j])){
	            letters[txt[j]]--;
	            if(letters[txt[j]] == 0)
	                distinctChar--;
	        }
	        
	        if(distinctChar == 0)
	            ans++;
	    }
	    
	    return ans;
	}

};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        string pat, txt;
        cin >> txt >> pat;
        Solution ob;
        auto ans = ob.search(pat, txt);
        cout << ans << "\n";
    }
    return 0;
}
// } Driver Code Ends