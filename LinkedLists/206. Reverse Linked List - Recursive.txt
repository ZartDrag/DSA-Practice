/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    void reverse(ListNode *node, ListNode *prev, ListNode *&head){
        if(!node){
            head = prev;
            return;
        }
        reverse(node->next, node, head);
        node->next = prev;
    }

	
	ListNode* altReverseList(ListNode* head) {
        if(!head || !head->next)
            return head;

        ListNode* reversedList = altReverseList(head->next);
        head->next->next = head;
        head->next = NULL;
        return reversedList;
    }
public:
    ListNode* reverseList(ListNode* head) {
        if(!head)
            return head;
        ListNode *newHead = NULL;
        reverse(head, NULL, newHead);
        return newHead;
    }
};