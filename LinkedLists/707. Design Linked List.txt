class MyLinkedList {
    struct Node{
        int val;
        Node *next;

        Node(int v){
            val = v;
            next = NULL;
        }
    };

    Node *head;
    int size;
public:
    MyLinkedList() {
        head = NULL;
        size = 0;
    }
    
    int get(int index) {
        if(index >= size || index < 0)
            return -1;

        Node *trav = head;

        while(index--)
            trav = trav->next;

        return trav->val;
    }
    
    void addAtHead(int val) {
        Node* temp = new Node(val);
        temp->next = head;
        head = temp;
        size++;
    }
    
    void addAtTail(int val) {
        addAtIndex(size, val);
    }
    
    void addAtIndex(int index, int val) {
        if(index > size || index < 0)
            return;

        if(index == 0){
            addAtHead(val);
            return;
        }        

        Node *trav = head;
        int i;
        for(i = 0; i<index-1; i++)
            trav = trav->next;

        Node *temp = new Node(val);  

        if(trav->next)      
            temp->next = trav->next;

        trav->next = temp;
        size++;
    }
    
    void deleteAtIndex(int index) {
        if(size == 0 || index < 0 || index >=size)
            return;

        if(index == 0){
            Node *temp = head;
            head = head->next;
            delete temp;
        } else {
            Node *trav = head;

            for(int i = 0; i<index-1; i++)
                trav = trav->next;
            
            Node *node = trav->next;

            if(node->next)
                trav->next = node->next;

            delete node;
        }

        size--;

    }
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */